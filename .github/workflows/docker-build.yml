name: Build and Push Docker Images

on:
  push:
    branches:
      - master   # triggers when you push to master branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout your repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Configure AWS credentials (from your GitHub secrets)
      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set aws_session_token ${{ secrets.AWS_SESSION_TOKEN }}
          aws configure set default.region ${{ secrets.AWS_REGION }}

      # Step 3: Login to ECR
      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
            | docker login --username AWS --password-stdin \
              ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      # Step 4: Build application image
      - name: Build Application image
        run: |
          docker build -t clo835-app -f Dockerfile .
          docker tag clo835-app:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/clo835-app:latest

      # Step 5: Build MySQL image
      - name: Build MySQL image
        run: |
          docker build -t clo835-mysql -f Dockerfile.mysql .
          docker tag clo835-mysql:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/clo835-mysql:latest

      # Step 6: Push both images to ECR
      - name: Push images to ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/clo835-app:latest
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/clo835-mysql:latest

